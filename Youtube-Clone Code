#include <iostream>
using namespace std;

class User
{
private:
    string name;
    int age;
    string remail;
    string rpassword;
    string lemail;
    string lpassword;
    string checkusername;
    string checkpassword;
    int emailline;
    int nameline;
    int rpin;
    string totalbill;
    string subscription;
    bool checkU = false;
    bool checkP = false;
    friend class Subscription;
    friend void totalbill(User &u1);

public:
    User()
    {
        totalbill = "0$";
        subscription = "Standard Account";
    }
    void registration(string file)
    {
        cout << "Enter your name : ";
        cin >> name;
        cout << "Enter  your age : ";
        cin >> age;
        cout << "Enter Email : ";
        cin >> remail;
        cout << "Enter  Password : ";
        cin >> rpassword;
        cout << "Enter  Recovery 4 digit pin : ";
        cin >> rpin;
        ofstream userdata(file, ios::app);
        if (userdata.is_open())
        {
            userdata << name << endl;
            userdata << age << endl;
            userdata << remail << endl;
            userdata << rpassword << endl;
            userdata << rpin << endl;
            if (file == "D:\\C++\\User's Data.txt")
            {
                userdata << subscription << endl;
                userdata << totalbill << endl;
            }
            else
                userdata << 0 << endl;

            cout << "\nRegistration Successful!!";
        }
        else
            cout << "Error while registring new user.Please TRY AGAIN!! ";
    }
    bool login(string file)
    {
        cout << "Enter email : ";
        cin >> lemail;
        cout << "Enter Password : ";
        cin >> lpassword;
        ifstream readfile(file);
        int line_number = 0;
        while (getline(readfile, checkusername))
        {
            if (lemail == checkusername)
            {
                checkU = true;
                break;
            }
            line_number++;
        }
        emailline = line_number;
        line_number++;
        int currentline = 0;
        readfile.seekg(0, ios::beg);
        if (checkU)
        {
            while (getline(readfile, checkpassword))
            {
                if (currentline == line_number)
                {
                    if (lpassword == checkpassword)
                    {
                        checkP = true;
                    }
                }
                currentline++;
            }
        }
        readfile.clear();
        readfile.seekg(0, ios::beg);
        line_number = line_number - 2;
        nameline = line_number;
        currentline = 1;
        string cname;
        while (getline(readfile, cname))
        {
            if (currentline == line_number)
            {
                name = cname;
            }
            if (currentline == line_number + 1)
            {
                string sage = cname;
                age = stoi(sage);
            }

            currentline++;
        }
        if ((checkU) && (checkP))
        {
            cout << "Login Successfull!!" << endl;
            return true;
        }
        else if (!checkU)
        {
            cout << "User Not Found!!";
        }
        else
        {
            cout << "Invalid Password!!";
        }
    }
    string getname(void)
    {
        return name;
    }
    int getage(void)
    {
        return age;
    }
    void changepassword(string file, string tempfile)
    {
        string Srpin;
        string newpassword;
        cout << "Enter email : ";
        cin >> lemail;
        cout << "Enter Recovery Key : ";
        cin >> rpin;
        Srpin = to_string(rpin);
        ifstream readfile(file);
        int recoverykey = 0;
        while (getline(readfile, checkusername))
        {
            if (lemail == checkusername)
            {
                checkU = true;
                break;
            }
            recoverykey++;
        }
        readfile.seekg(0, ios::beg);
        recoverykey = recoverykey + 2;
        for (int i = 0; i <= recoverykey; i++)
        {
            getline(readfile, checkpassword);
            if (i == recoverykey)
            {
                if (Srpin == checkpassword)
                {
                    checkP = true;
                    break;
                }
            }
        }

        ofstream temp(tempfile);
        readfile.seekg(0, ios::beg);
        if (!checkU)
        {
            cout << "No User Found" << endl;
            return;
        }
        if (!checkP)
        {
            cout << "Recovery Key Invalid!" << endl;
            return;
        }

        if ((checkU) && (checkP))
        {
            cout << "Enter New Password : ";
            cin >> newpassword;
            recoverykey = recoverykey;
            int cline = 0;
            string line;
            ifstream readfile(file);
            while (getline(readfile, line))
            {
                cline++;
                if (cline == recoverykey)
                {
                    temp << newpassword << endl;
                }
                else
                    temp << line << endl;
            }
            cout << "Password Successfully Changed!!";
        }
        readfile.close();
        temp.close();
        const char *ofile = file.c_str();
        const char *tfile = tempfile.c_str();
        remove(ofile);
        rename(tfile, ofile);
    }
    void deleteaccount(string file, string tempfile)
    {
        ifstream readfile(file);
        ofstream temp(tempfile);
        string dpass;
        cout << "Enter your password : ";
        cin >> dpass;
        if (!(dpass == lpassword))
        {
            cout << "Authentication Failed!!" << endl;
        }
        cout << "User authentication successful !!" << endl;
        string temp1;
        cout << "Account Deleted Successfully" << endl;
        int deletestarting = nameline;
        int deleteending = nameline + 6;
        int lineNumber = 1;
        // cout<<"Delete Starting : "<<deletestarting<<endl;
        // cout<<"Delete Ending : "<<deleteending<<endl;
        while (getline(readfile, temp1))
        {
            if (!(lineNumber >= deletestarting && lineNumber <= deleteending))
            {
                temp << temp1 << endl;
            }
            lineNumber++;
        }
        readfile.close();
        temp.close();
        // remove("D:\\C++\\SpotifyClone.txt");
        // rename("D:\\C++\\temp.txt", "D:\\C++\\SpotifyClone.txt");
        const char *oFile = file.c_str();
        const char *tFile = tempfile.c_str();
        remove(oFile);
        rename(tFile, oFile);
    }
};
class Subscription
{
private:
    int sub1;
    string displaysubscription;
    int bill;
public:

    void checkSubscription(User &U1){
        sub1 = U1.nameline + 4;
        ifstream readfile("D:\\C++\\User's Data.txt");
        string checksub;
        int current_line = 0;
        while (getline(readfile, checksub))
        {
            if (current_line == sub1)
            {
                displaysubscription = checksub;
                break;
            }
            current_line++;
        }
        cout << "Your subscription is : " << displaysubscription << endl;
    }

    void changeSubscription(User &U1)
    {
        char choice;
        sub1 = U1.nameline + 4;
        bill=sub1+1;
        ifstream readfile1("D:\\C++\\User's Data.txt");
        string checksub;
        int current_line = 0;
        while (getline(readfile1, checksub))
        {
            if (current_line == sub1)
            {
                displaysubscription = checksub;
                break;
            }
            current_line++;
        }
        cout << "Your subscription is : " << displaysubscription << endl;
        readfile1.close();
        cout << "Do you want to change your Subscription (y/n) : ";
        cin >> choice;
        if (tolower(choice)=='n')
        {
            cout<<"Subscription not changed!!"<<endl;
            return;
        }
        else if(!((choice=='Y')||(choice=='y'))){
            cout<<"INVALID INPUT!!"<<endl;
            return;
        }
        
        ifstream readfile("D:\\C++\\User's Data.txt");
        ofstream temp("D:\\C++\\temp.txt");
        if (!((readfile.is_open( )) && (temp.is_open())))
        {
            cout<<"Error Opening File!!"<<endl;
            return;
        }
        else
        if(displaysubscription=="Standard Account")
        { 
        char choice1;
        cout<<"Do you want to upgrade your account (Monthly 10$)"<<endl;
        cout<<"Continue... (y/n) : ";
        cin>>choice1;
        if (tolower(choice1)=='n') 
        {
            cout<<"Subscription not changed!!"<<endl;
            return;
        }
        else if(!((choice1=='Y')||(choice1=='y'))){
            cout<<"INVALID INPUT!!"<<endl;
            return;
        }
         current_line=0;
         cout<<"Account Upgraded Successfully!!"<<endl;
         readfile.seekg(0, ios::beg);
         while (getline(readfile,checksub))
        {
            if (current_line==sub1)
            {
              temp<<"Premium Account"<<endl;
            }
            else if (current_line==bill)
            {
              temp<<"10$"<<endl;
            }
            else{
            temp<<checksub<<endl;
            }
            current_line++;
        }
        }
        if(displaysubscription=="Premium Account"){
            char choice2;
         cout<<"Return to free plan (y/n) : ";
         cin>>choice2;
         if (tolower(choice2)=='n') 
        {
            cout<<"Subscription not changed!!"<<endl;
            return;
        }
        else if(!((choice2=='Y')||(choice2=='y'))){
            cout<<"INVALID INPUT!!"<<endl;
            return;
        }
         cout<<endl<<"Account Subscription Removed!! "<<endl;
        current_line=0;
         readfile.seekg(0, ios::beg);
         while (getline(readfile,checksub))
        {
            if (current_line==sub1)
            {
              temp<<"Standard Account"<<endl;
            }
            else if (current_line==bill)
            {
              temp<<"0$"<<endl;
            }
            else{
                temp<<checksub<<endl;
            }
            current_line++;
        }
        }
        temp.close();
        readfile.close();
        remove("D:\\C++\\User's Data.txt");
        rename("D:\\C++\\temp.txt","D:\\C++\\User's Data.txt");
    }
    
};
class VideoPlayer
{
    private:
    string videoname;
    char *vaddress;
    int commentno;
    string comment[3];
    int likes;
    static int videonumber;
    static int counting;
    string Restriction;
    string views;
    string *creators;
    string *videotitles;
    int viewline;
    public:
    void displayvideo(void){
        string *temparray = new string [1500];
    ifstream  entertainment("D:\\C++\\Entertainment.txt");
    ifstream  education("D:\\C++\\Education.txt");
    ifstream  gaming("D:\\C++\\Gaming.txt");
    ifstream  news("D:\\C++\\News and Politics.txt");
    string video,videotitle;
    cout<<endl;
    int i=0;
    while (getline(entertainment, video)) {
       if (video.substr(0, 1) == "&") {
           videotitle=video.substr(1);
           temparray[i]=videotitle;
           cout <<i+1<<".) "<< videotitle << endl;
           i++;
    }
}
  while (getline(education, video)) {
    if (video.substr(0, 1) == "&") {
        videotitle=video.substr(1);
        temparray[i]=videotitle;
        cout <<i+1<<".) "<< videotitle << endl;
        i++;
    }
}
  while (getline(gaming, video)) {
    if (video.substr(0, 1) == "&") {
        videotitle=video.substr(1);
        temparray[i]=videotitle;
        cout <<i+1<<".) "<< videotitle << endl;
        i++;
    }
}
  while (getline(news, video)) {
    if (video.substr(0, 1) == "&") {
        videotitle=video.substr(1);
        temparray[i]=videotitle;
        cout <<i+1<<".) "<< videotitle << endl;
        i++;
    }
}   
    videonumber=i;
    videotitles = new string[videonumber];
    for (int i = 0; i < videonumber; i++)
    {
        videotitles[i] = temparray[i];
    }
    
    }
    string VideoName(void) {
    string videoname;
    int watch;
    cout << "Enter the video : ";
    cin >> watch;
    if (watch >= 1 && watch <= videonumber) {
        videoname=videotitles[watch - 1];
        return  videoname;
    } else {
        cout <<endl<<"Invalid input. Please enter a valid number." << endl;
        return  "";
    }
    }
};
 void playvideo(int age,string uvideo) {
    cout<<endl;
    ifstream  entertainment("D:\\C++\\Entertainment.txt");
    ifstream  education("D:\\C++\\Education.txt");
    ifstream  gaming("D:\\C++\\Gaming.txt");
    ifstream  news("D:\\C++\\News and Politics.txt");
    string cvideo="&"+uvideo;
    string type;
    bool found = false;
    int line_number = 0;
    string search;

    while (getline(education, search)) {
        line_number++;
        if (search == cvideo) {
            found = true;
            type = "Education";
            break;
        }
    }

    if (!found) {
        line_number = 0;
        while (getline(entertainment, search)) {
            line_number++;
            if (search == cvideo) {
                found = true;
                type = "Entertainment";
                break;
            }
        }
    }

    if (!found) {
        line_number = 0;
        while (getline(gaming, search)) {
            line_number++;
            if (search == cvideo) {
                found = true;
                type = "Gaming";
                break;
            }
        }
    }

    if (!found) {
        line_number = 0;
        while (getline(news, search)) {
            line_number++;
            if (search == cvideo) {
                found = true;
                type = "News and Politics";
                break;
            }
        }
    }
    // cout << "Video found in " << type << " category at line " << line_number << endl;
    const char *videolink;
    int index = 0;
    string file;
    string link;
    if (type == "Education")
    {
        gaming.close();
        news.close();
        entertainment.close();
        education.clear();
        education.seekg(0, ios::beg);
        while (getline(education, file))
        {
            if (index == line_number + 1)
            {
                link = file;
            }
             if (index == line_number + 2)
            {
                Restriction = file;
            }
            if (index == line_number + 3)
            {
                views = file;
            }
            index++;
        }    
        education.clear();
        education.seekg(0, ios::beg);  
        int viewcount=stoi(views);
        viewcount=viewcount+1;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(education,data)){
            if (count==line_number+3)
            {
                tempfile<<viewcount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        education.close();
        remove("D:\\C++\\Education.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\Education.txt");
    }
    else if (type == "Gaming")
    {
        entertainment.close();
        education.close();
        news.close();
        gaming.clear();
        gaming.seekg(0, ios::beg);
        while (getline(gaming, file))
        {
            if (index == line_number + 1)
            {
                link = file;
            }
              if (index == line_number + 2)
            {
                Restriction = file;
            }
             if (index == line_number + 3)
            {
                views = file;
            }
            index++;
        }
        gaming.clear();
        gaming.seekg(0, ios::beg);  
        int viewcount=stoi(views);
        viewcount=viewcount+1;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(gaming,data)){
            if (count==line_number+3)
            {
                tempfile<<viewcount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        gaming.close();
        remove("D:\\C++\\Gaming.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\Gaming.txt");
    }
    else if (type == "Entertainment")
    {
        education.close();
        gaming.close();
        news.close();
        entertainment.clear();
        entertainment.seekg(0, ios::beg);
        while (getline(entertainment, file))
        {
            if (index == line_number + 1)
            {
                link = file;
            }
              if (index == line_number + 2)
            {
                Restriction = file;
            }
             if (index == line_number + 3)
            {
                views = file;
            }
            index++;
        }
        entertainment.clear();
        entertainment.seekg(0, ios::beg);  
        int viewcount=stoi(views);
        viewcount=viewcount+1;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(entertainment,data)){
            if (count==line_number+3)
            {
                tempfile<<viewcount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        entertainment.close();
        remove("D:\\C++\\Entertainment.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\Entertainment.txt");
    }
    else if (type == "News and Politics")
    {
        entertainment.close();
        education.close();
        gaming.close();
        news.clear();
        news.seekg(0, ios::beg);
        while (getline(news, file))
        {
            if (index == line_number + 1)
            {
                link = file;
            }
              if (index == line_number + 2)
            {
                Restriction = file;
            }
             if (index == line_number + 3)
            {
                views = file;
            }
            index++;
        }
        news.clear();
        news.seekg(0, ios::beg);  
        int viewcount=stoi(views);
        viewcount=viewcount+1;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(news,data)){
            if (count==line_number+3)
            {
                tempfile<<viewcount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        news.close();
        remove("D:\\C++\\News and Politics.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\News and Politics.txt");
    }
   
    // cout<<Restriction<<endl<<views<<endl<<link<<endl<<age<<endl;
    if (Restriction == "Restricted")
    {
      if (age>=18)
      {
        videolink=link.c_str();
        ShellExecuteA(NULL, "open", videolink, NULL, NULL, SW_MINIMIZE);
      }
      else
        cout<<"You are under 18 and cann't watch restricted content !!"<<endl;
    }
    else if(Restriction=="Not Restricted"){
        videolink=link.c_str();
        ShellExecuteA(NULL, "open", videolink, NULL, NULL, SW_MINIMIZE);
    }
    return "";
 };

 void likevideo(string cvideo,bool check){

    ifstream  entertainment("D:\\C++\\Entertainment.txt");
    ifstream  education("D:\\C++\\Education.txt");
    ifstream  gaming("D:\\C++\\Gaming.txt");
    ifstream  news("D:\\C++\\News and Politics.txt");
    bool found = false;
    string type;
    int line_number = 0;
    string search,name;
    name="&"+cvideo;
    while (getline(education, search)) {
        line_number++;
        if (search == name) {
            found = true;
            type = "Education";
            break;
        }
    }

    if (!found) {
        line_number = 0;
        while (getline(entertainment, search)) {
            line_number++;
            if (search == name) {
                found = true;
                type = "Entertainment";
                break;
            }
        }
    }
    if (!found) {
        line_number = 0;
        while (getline(gaming, search)) {
            line_number++;
            if (search == name) {
                found = true;
                type = "Gaming";
                break;
            }
        }
    }

    if (!found) {
        line_number = 0;
        while (getline(news, search)) {
            line_number++;
            if (search == name) {
                found = true;
                type = "News and Politics";
                break;
            }
        }
    }
    // cout<<"Video found in "<<type<<"Categorey in line no : "<<line_number<<endl;
    int index=0;
    string likes,file,views;
    if (type == "Education")
    {
        gaming.close();
        news.close();
        entertainment.close();
        education.clear();
        education.seekg(0, ios::beg);
        while (getline(education , file))
        {
            if (index == line_number + 3)
            {
                views = file;
            }
            if (index == line_number + 4)
            {
                likes = file;
            }
            index++;
        }   
        if (!check)
        {
            double revenue=stoi(views);
            revenue*=0.01;
            cout<<"Views on video are : "<<views<<endl;
            cout<<"Likes on video are : "<<likes<<endl;
            cout<<"Revenue of video is : "<<revenue<<"$"<<endl;
        }
        if (check)
        {
        // cout<<likes<<endl;
        cout<<endl<<"Like Added!!"<<endl;
        education.clear();
        education.seekg(0, ios::beg);  
        int likecount=stoi(likes);
        likecount = likecount+1;
        cout<<"Previous : "<<likes<<" Likes"<<endl;
        cout<<"After    : "<<likecount<<" Likes"<<endl;
        cout<<endl;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(education,data)){
            if (count==line_number+4)
            {
                tempfile<<likecount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        education.close();
        remove("D:\\C++\\Education.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\Education.txt");
        }
    }
    else if (type == "Gaming")
    {
        entertainment.close();
        education.close();
        news.close();
        gaming.clear();
        gaming.seekg(0, ios::beg);
        while (getline(gaming, file))
        {
            if (index == line_number + 3)
            {
                views = file;
            }
            if (index == line_number + 4)
            {
                likes = file;
            }
            index++;
        }
        if (!check)
        {
            double revenue=stoi(views);
            revenue*=0.01;
            cout<<"Views on video are : "<<views<<endl;
            cout<<"Likes on video are : "<<likes<<endl;
            cout<<"Revenue of video is : "<<revenue<<"$"<<endl;
        }
        if (check)
        {
        cout<<endl<<"Like Added!!"<<endl;
        gaming.clear();
        gaming.seekg(0, ios::beg);  
        int likecount=stoi(likes);
        likecount = likecount+1;
        cout<<"Previous : "<<likes<<" Likes"<<endl;
        cout<<"After    : "<<likecount<<" Likes"<<endl;
        cout<<endl;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(gaming,data)){
            if (count==line_number+4)
            {
                tempfile<<likecount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        gaming.close();
        remove("D:\\C++\\Gaming.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\Gaming.txt");
    }
    }
    else if (type == "Entertainment")
    {
        education.close();
        gaming.close();
        news.close();
        entertainment.clear();
        entertainment.seekg(0, ios::beg);
        while (getline(entertainment, file))
        {
            if (index == line_number + 3)
            {
                views = file;
            }
            if (index == line_number + 4)
            {
                likes = file;
            }
            index++;
        }
        // cout<<"Video found in entertainment file with likes : "<<likes<<endl;
        if (!check)
        {
            double revenue=stoi(views);
            revenue*=0.01;
            cout<<"Views on video are : "<<views<<endl;
            cout<<"Likes on video are : "<<likes<<endl;
            cout<<"Revenue of video is : "<<revenue<<"$"<<endl;
        }
        if (check)
        {
        cout<<endl<<"Like Added!!"<<endl;
        entertainment.clear();
        entertainment.seekg(0, ios::beg);  
        int likecount=stoi(likes);
        likecount=likecount+1;
        cout<<"Previous : "<<likes<<" Likes"<<endl;
        cout<<"After    : "<<likecount<<" Likes"<<endl;
        cout<<endl;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(entertainment,data)){
            if (count==line_number+4)
            {
                tempfile<<likecount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        entertainment.close();
        remove("D:\\C++\\Entertainment.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\Entertainment.txt");
    }
    }
    else if (type == "News and Politics")
    {
        entertainment.close();
        education.close();
        gaming.close();
        news.clear();
        news.seekg(0, ios::beg);
        while (getline(news, file))
        {
            if (index == line_number + 3)
            {
                views = file;
            }
            if (index == line_number + 4)
            {
                likes = file;
            }
            index++;
        }
        if (!check)
        {
            double revenue=stoi(views);
            revenue*=0.01;
            cout<<"Views on video are : "<<views<<endl;
            cout<<"Likes on video are : "<<likes<<endl;
            cout<<"Revenue of video is : "<<revenue<<"$"<<endl;
        }
        if (check)
        {
        cout<<endl<<"Like Added!!"<<endl;
        news.clear();
        news.seekg(0, ios::beg);  
        int likecount=stoi(likes);
        likecount = likecount+1;
        cout<<"Previous : "<<likes<<" Likes"<<endl;
        cout<<"After    : "<<likecount<<" Likes"<<endl;
        cout<<endl;
        string data;
        ofstream tempfile("D:\\C++\\tempfile.txt");
        int count = 0;
        while (getline(news,data)){
            if (count==line_number+4)
            {
                tempfile<<likecount<<endl;
            }
            else{
             tempfile<<data<<endl;
            }
            count++;
        }
        tempfile.close();
        news.close();
        remove("D:\\C++\\News and Politics.txt");
        rename("D:\\C++\\tempfile.txt","D:\\C++\\News and Politics.txt");
    }
    }
    }
void totalbill(User &u1){
ifstream readfile("D:\\C++\\User's Data.txt");
string line;
int billline=u1.nameline+5;
string tbill;
int count =0;
cout<<billline<<endl;
while (getline(readfile,line))
{
    if (count==billline)
    {
        tbill=line;
        break;
    }
    count++;
}
cout<<"Your total bill is : "<<tbill<<endl;

}
int main()
{
    int choice, Uchoice,Cchoice, loginchoice;
    bool logincheck,clogincheck;
    bool checking123=true;
    VideoPlayer vp;
    User u1;
    UploadVideo uv2;
    Subscription sub1;
    cout << "Youtube Clone " << endl;
    cout << "1.) Creator's Studio" << endl;
    cout << "2.) User's Screen" << endl;
    cout << "Enter your Choice : ";
    cin >> choice;

       if (choice == 1)
    {
        // Code for Creator
        string vcheck;
        string d="D:\\C++\\Creator's Data.txt";
        string t="D:\\C++\\Ctemp.txt";
        cout << "Creators's Screen" << endl;
        cout << "&&-----MENU-----&&" << endl;
        cout << "1.) Register as a Creator" << endl;
        cout << "2.) Login" << endl;
        cout << "3.) Change Password" << endl;
        cin >> Cchoice;
        switch (Cchoice)
        {
        case 1:
            u1.registration(d);
            break;
        case 2:
            clogincheck=u1.login(d);
            break;
        case 3:
            u1.changepassword(d,t);
            break;
        default:
        cout << "Invalid Option!!" << endl;
            break;
        }
        if (clogincheck)
        {   
            string name=u1.getname();
            UploadVideo uv1(name);
            cout<<endl<<"Creator's Dashboard !! ";
            cout<<"Welcome "<<name<<endl;
            cout<<"1.) Upload Video"<<endl;
            cout<<"2.) Check Revenue"<<endl;
            cout<<"3.) Check Performance"<<endl;
            int pchoice;
            cout<<"Enter Your Choice : ";
            cin>>pchoice;
            switch(pchoice)
            {
                case 1: 
                    // u1.uploadvideo();
                uv1.uploadvideo();
                break;
                case 2:
                    // u1.revenue();
                break;
                case 3: 
                cout<<endl;
                vcheck=uv1.performance(name);
                // cout<<vcheck<<endl;
                likevideo(vcheck,false);
                cout<<endl;
                break;
                default:cout<<"Invalid Option!!\n";
            }
        }
        }
        
   else if (choice == 2)
    { bool login=false;
    do
    {  
       string d="D:\\C++\\User's Data.txt";
       string t="D:\\C++\\temp.txt";
       string name,vname,videoname;
       string videotitle;
        cout << "User Panel" << endl;
        cout << "&&-----MENU-----&&" << endl;
        cout << "1.) Register User" << endl;
        cout << "2.) Login" << endl;
        cout << "3.) Change Password" << endl;

        cin >> Uchoice;

        switch (Uchoice)
        {
        case 1:
            u1.registration(d);
            break;
        case 2:
            logincheck = u1.login(d);
            if (logincheck)
            {
                int age=u1.getage();
                login=false;
                checking123=true;
                cout<<"\t\t Welcome  "<<u1.getname( )<<"!!"<<endl;
            do
            { 
                cout << "1.) Play Video" << endl;
                cout << "2.) Check Creators" << endl;
                cout << "3.) Check Videos of Specific Creator" << endl;
                cout << "4.) Recommended Videos" << endl;
                cout << "5.) Like a Video" << endl;
                cout << "6.) Comment on a Video" << endl;
                cout << "7.) Check Total Bill" << endl;
                cout << "8.) Check Account Type (Subscription Plan)" << endl;
                cout << "9.) Change Subscription Plan" << endl;
                cout << "10.) Logout" << endl;
                cout << "11.) Delete Account" << endl;
                cin >> loginchoice;

                switch (loginchoice)
                {
                case 1:
                    // Play video
                    vp.displayvideo();
                    vname=vp.VideoName();
                    vp.playvideo(age,vname);
                    break;
                case 2:
                    // Check Artists
                    vp.checkcreators();
                    break;
                case 3:
                    // Check videos of a Specific Creator
                    vp.checkcreators();
                    name=vp.creatorname();
                    if (!name.empty())
                    {
                        videotitle=uv2.performance(name);
                        if (!videotitle.empty())
                        {
                        vp.playvideo(age,videotitle);
                        }
                        
                    }
                    // cout<<videotitle<<endl;
                    break;
                case 4:
                    // Recommend Video
                    break;
                case 5:
                    // Like a Video
                    vp.displayvideo();
                    videoname=vp.VideoName();
                    likevideo(videoname,true);
                    break;
                case 6:
                    // Comment on a Video
                    vp.displayvideo();
                    vname=vp.VideoName();
                    vp.comments(vname);                    
                    break;
                case 7:
                    // Check Total Bill
                    totalbill(u1);
                    break;
                case 8:
                    sub1.checkSubscription(u1);
                    break;
                case 9:
                    sub1.changeSubscription(u1);
                    break;
                case 10:
                    // Logout
                    cout<<"Logout Successful. Good BYE!!"<<endl;
                    checking123=false;
                    login=true;
                    break;
                case 11:
                    u1.deleteaccount(d,t);
                    checking123=false;
                    break;
                default:
                    cout << "INVALID CHOICE!!";
                    break;
                }
            } while (checking123);
            }
            break;
        case 3:
            u1.changepassword(d,t);
            break;
        }
    } while (login);
    }
    else
      cout <<endl<<"Invalid choice!!.Exiting Program..."<<endl;
    return 0;
}

